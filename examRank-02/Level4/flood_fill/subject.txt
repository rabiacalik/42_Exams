Assignment name  : flood_fill
Expected files   : *.c, *.h
Allowed functions: -
--------------------------------------------------------------------------------

2 boyutlu bir char dizisi olarak bir char ** alan bir fonksiyon yazın, a
Bu dizinin boyutları olarak t_point ve başlangıç ​​noktası olarak bir t_point.

Verilen 'başlangıç' t_noktasından başlayarak, bu işlev tüm bölgeyi doldurur
içindeki karakterleri 'F' karakteri ile değiştirerek. Bir bölge bir gruptur
diğer karakterler tarafından yatay ve dikey olarak sınırlandırılmış aynı karakter
veya dizi sınırı.

flood_fill işlevi çapraz olarak dolmaz.

flood_fill işlevinin prototipi şu şekilde olacaktır:
  void flood_fill(char **tab, t_point size, t_point begin);

t_point yapısının prototipi şu şekildedir:

  typedef struct  s_point
  {
    int           x;
    int           y;
  }               t_point;

Example:

$> cat test.c
#include <stdlib.h>
#include <stdio.h>
#include "flood_fill.h"

char** make_area(char** zone, t_point size)
{
	char** new;

	new = malloc(sizeof(char*) * size.y);
	for (int i = 0; i < size.y; ++i)
	{
		new[i] = malloc(size.x + 1);
		for (int j = 0; j < size.x; ++j)
			new[i][j] = zone[i][j];
		new[i][size.x] = '\0';
	}

	return new;
}

int main(void)
{
	t_point size = {8, 5};
	char *zone[] = {
		"11111111",
		"10001001",
		"10010001",
		"10110001",
		"11100001",
	};

	char**  area = make_area(zone, size);
	for (int i = 0; i < size.y; ++i)
		printf("%s\n", area[i]);
	printf("\n");

	t_point begin = {7, 4};
	flood_fill(area, size, begin);
	for (int i = 0; i < size.y; ++i)
		printf("%s\n", area[i]);
	return (0);
}

$> gcc flood_fill.c test.c -o test; ./test
11111111
10001001
10010001
10110001
11100001

FFFFFFFF
F000F00F
F00F000F
F0FF000F
FFF0000F
$> 